
## How the Rules Work ##

Rules are processed sequentially from top to bottom. 
With each PVOutput "v" value being assigned only once, though multiple rules can apply to each value. 
It's crucial to align the rules correctly in the list and within the rules themselves to ensure proper functionality.


## Understanding If Rules ##
If rules may seem counterintuitive at first. Here's an explanation:

Actual Rule:              "v4": "0 if v4 < 50 else v4"
Explanation:              "v4": "0 (Result) if v4 < 50 (Condition) else v4 (Result if condition not met)"
Template:                 "(PVOutput 'v' value)": "(Result) if (Condition) else (Result if condition not met)"


## Applying Multiple Rules ##
When multiple rules are applied to a value, they are processed sequentially:

Example: 
"v2": ["v2 * 0.89", "0 if v2 < 50 else v2"]
v value":["rule 1","rule 2","rule 3","rule 4 etc"],
 

## Example of some rules ##
CUSTOM_RULES = {
    # "v1": ["v2 / 12"],                              # Converts a live value ie. Watts to an energy value (Watt Hour) but this is not needed as pvoutput already does this.
    # "v4": ["v3 * 12"],                              # Converts an energy value (Watt Hour) to a live value (Watts) but this is not needed as pvoutput already does this.
    "v4": ["v4 * 0.75", "0 if v4 < 300 else v4"],     # Applying both rules sequentially left to right the first rule is done then the second rule. rules are seperated by a comma
    "v8": ["v7 + 100"],                               # Assuming v7 = 0 then v8 = 100
    "v9": ["v8 + 100"],                               # v8 = 100 from above rule so v9 = 200
    "v10": ["v9 + 100"],                              # v9 = 200 from above rule so v10 = 300
    "v11": ["v10 + 100"],                             # v0 = 300 from above rule so v11 = 400
    "v12": ["v11 + 100"],                             # v11 = 400 from above rule so v12 = 500
    # Add more rules as needed, (values update after each rule so you can use an updated value from one rule for the next rule) (the rules run from top to bottom).
}


## ordering of rules ##
To ensure the rules are applied correctly, you need to process the rule for v2 before the rule for v4. 
This is because v4 depends on the updated value of v2. First, apply the rule for v2 (v2 = v2 * 0.89). After updating v2, apply the rule for v4 (v4 = v4 * 0.89). 
This sequence ensures that when v4 is compared to v2 ((v4 + v2) if v2 < 50 else v4) , both values have been correctly adjusted. 
If you reverse the order, (v4 * 0.89) would be compared to v2 before v2 has been updated, leading to incorrect results.

CUSTOM_RULES = {
   "v2": ["v2 * 0.89","0 if v2 < 50 else v2"],
   "v4": ["v4 * 0.89","(v4 + v2) if v2 < 50 else v4"],
}

